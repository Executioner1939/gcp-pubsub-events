name: Integration Tests with PubSub Emulator

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: # Allow manual trigger

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    services:
      # We'll start the emulator as a step instead of service for better control
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
    
    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'
    
    - name: Install PubSub emulator
      run: |
        gcloud components install pubsub-emulator --quiet
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio pytest-timeout pytest-xdist
    
    - name: Start PubSub emulator
      run: |
        # Start emulator in background
        gcloud beta emulators pubsub start --host-port=0.0.0.0:8085 &
        EMULATOR_PID=$!
        echo "EMULATOR_PID=$EMULATOR_PID" >> $GITHUB_ENV
        
        # Wait for emulator to be ready
        echo "Waiting for emulator to start..."
        timeout=30
        while [ $timeout -gt 0 ]; do
          if curl -f http://localhost:8085 >/dev/null 2>&1; then
            echo "Emulator is ready!"
            break
          fi
          sleep 1
          timeout=$((timeout-1))
        done
        
        if [ $timeout -eq 0 ]; then
          echo "Emulator failed to start!"
          exit 1
        fi
    
    - name: Set emulator environment
      run: |
        echo "PUBSUB_EMULATOR_HOST=localhost:8085" >> $GITHUB_ENV
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short
      if: always()
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short --timeout=60
      env:
        PUBSUB_EMULATOR_HOST: localhost:8085
    
    - name: Run end-to-end tests
      run: |
        python -m pytest tests/e2e/ -v --tb=short --timeout=120
      env:
        PUBSUB_EMULATOR_HOST: localhost:8085
    
    - name: Run comprehensive library test
      run: |
        python test_library_emulator.py
      env:
        PUBSUB_EMULATOR_HOST: localhost:8085
    
    - name: Generate test report
      run: |
        pytest tests/ --junitxml=test-results.xml --cov=gcp_pubsub_events --cov-report=xml --cov-report=html
      env:
        PUBSUB_EMULATOR_HOST: localhost:8085
      if: always()
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          test-results.xml
          htmlcov/
          coverage.xml
      if: always()
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration-tests
        name: python-${{ matrix.python-version }}
      if: matrix.python-version == '3.11' # Only upload once
    
    - name: Stop PubSub emulator
      run: |
        if [ ! -z "$EMULATOR_PID" ]; then
          kill $EMULATOR_PID || true
        fi
        # Kill any remaining emulator processes
        pkill -f "pubsub-emulator" || true
      if: always()

  performance-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
    
    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'
    
    - name: Install PubSub emulator
      run: |
        gcloud components install pubsub-emulator --quiet
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest-benchmark
    
    - name: Start PubSub emulator
      run: |
        gcloud beta emulators pubsub start --host-port=0.0.0.0:8085 &
        sleep 10
    
    - name: Run performance tests
      run: |
        python tests/performance/benchmark_throughput.py
      env:
        PUBSUB_EMULATOR_HOST: localhost:8085
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results.json
      if: always()

  docker-integration:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build test Docker image
      run: |
        docker build -f tests/docker/Dockerfile -t gcp-pubsub-events-test .
    
    - name: Run tests in Docker with emulator
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          gcp-pubsub-events-test \
          /workspace/tests/docker/run-tests-with-emulator.sh